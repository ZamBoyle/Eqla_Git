QUIZZ N°1
=========

1. Pour créer un nouveau dépôt git, j'utilise:
[ ]a. git log
[ ]b. git init
[ ]c. git status
[ ]d. git surlesol

2. Pour afficher des informations sur mon dépôt, j'utilise la commande:
[ ]a. git init 
[ ]b. git log
[ ]c. git info
[ ]d. git data
[ ]e. git status

3. Pour indexer mon fichier genius.py, j'utilise la commande:
[ ]a. git add genius.py
[ ]b. git status genius.py
[ ]c. git reset genius.py

4. Dans le cas suivant, quel fichier va être enregistré dans l'historique de mon dépôt après la commande git commit -m "quiz" ?
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   genius.py
no changes added to commit (use "git add" and/or "git commit -a")
[ ]a. genius.py
[ ]b. Tous les fichiers du projet
[ ]c. Aucun fichier du projet

5. Pour voir les modifications apportées sur le fichier genius.py, on utilise la commande:
[ ]a. git diff genius.py
[ ]b. git version genius.py
[ ]c. git commit genius.py
[ ]d. git add genius.py

6. Qu'est-ce un SHA1 ?
[ ]a. un tag
[ ]b. un identifiant unique qui identifie un commit
[ ]c. un paramtère de la commande git
[ ]d. Votre premier chat

7. Pour afficher l'historique de mon dépôt, j'utilise
[ ]a. git log
[ ]b. git init
[ ]c. git checkout
[ ]d. git show
[ ]e. git status

8. Comment je fais pour revenir sur le tag master ?
[ ]a. git log master
[ ]b. git diff master
[ ]c. git master
[ ]d. git slave to master
[ ]e. git checkout master

9. Pour ajouter le tag V7000 à un commit, j'utilise
[ ]a. git V7000 tag
[ ]b. git add V7000
[ ]c. git checkout V7000
[ ]d. git tag V7000
[ ]e. git checkout V7000

10. Pour revenir à la version V6000, j'utilise
[ ]a. git V6000 tag
[ ]b. git add V6000
[ ]c. git checkout V6000
[ ]d. git tag V6000
[ ]e. git checkout version V6000